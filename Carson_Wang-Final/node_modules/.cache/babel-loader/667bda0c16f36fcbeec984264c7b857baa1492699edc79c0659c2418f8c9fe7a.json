{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n  let {\n    resortName\n  } = _ref;\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/reviews?resortName=\".concat(encodeURIComponent(resortName))).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setReviews(data);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('There has been a problem with your fetch operation:', error);\n      setIsLoading(false);\n    });\n  }, [resortName]);\n  const sortedReviews = reviews.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Reviews for \", resortName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading reviews...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : sortedReviews.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedReviews.map((review, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: review.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 20\n          }, this), \" (\", new Date(review.timestamp).toLocaleDateString(), \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: review.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", review.rating, \" / 5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews available for this resort.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fetch(\"http://localhost:3000/reviews\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"comment\": \"asldf;k;afslfdkjals\"\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(json => {\n        console.log(json);\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"s1w+0vHiLmpekVR86+5NTj71l0g=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Comments","_ref","_s","resortName","reviews","setReviews","isLoading","setIsLoading","fetch","concat","encodeURIComponent","then","response","ok","Error","json","data","catch","error","console","sortedReviews","sort","a","b","Date","timestamp","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","review","index","author","toLocaleDateString","comment","rating","onSubmit","method","body","JSON","stringify","headers","log","type","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Comments({ resortName }) {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/reviews?resortName=${encodeURIComponent(resortName)}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setReviews(data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n        setIsLoading(false);\n      });\n  }, [resortName]);\n\n  const sortedReviews = reviews.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n\n\n\n  return (\n    <div>\n      <h2>Reviews for {resortName}</h2>\n      {isLoading ? (\n        <p>Loading reviews...</p>\n      ) : (\n        sortedReviews.length > 0 ? (\n          <ul>\n            {sortedReviews.map((review, index) => (\n              <li key={index}>\n                <p><strong>{review.author}</strong> ({new Date(review.timestamp).toLocaleDateString()}):</p>\n                <p>{review.comment}</p>\n                <p>Rating: {review.rating} / 5</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No reviews available for this resort.</p>\n        )\n      )}\n      <form onSubmit={fetch(\"http://localhost:3000/reviews\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"comment\": \"asldf;k;afslfdkjals\"\n        }),\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          console.log(json);\n        })}>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}