{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/index.js\";\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n\n// Importing route components\nimport Root from './routes/root';\nimport DetailPage from './routes/details';\nimport FAQPagel from './routes/userFAQ';\nimport Index from './routes/index';\nimport Search from './routes/search';\nimport './css/index.css';\n\n/*\nITP 404, Midterm\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nCreate router, loader for react-router-dom\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nconst options = {\n  method: 'GET',\n  url: 'https://ski-resorts-and-conditions.p.rapidapi.com/v1/resort/whistler-blackcomb',\n  headers: {\n    'X-RapidAPI-Key': '55989d32a6mshcc21389f5a6e365p1f7963jsn4be692249f51',\n    'X-RapidAPI-Host': 'ski-resorts-and-conditions.p.rapidapi.com'\n  }\n};\ntry {\n  const response = await axios.request(options);\n  console.log(response.data);\n} catch (error) {\n  console.error(error);\n}\n\n// Create the router with route configurations\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(Index, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this)\n  }\n  // {\n  //   path: '/SkiResorts',\n  //   element: <DetailPage />,\n  //   loader() {\n  //     return fetchResorts().then(resortsData => {\n  //       if (!resortsData) {\n  //         return null;\n  //       }\n  //       return { resorts: resortsData };\n  //     });\n  //   },\n  // },\n  ]\n}]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["createBrowserRouter","RouterProvider","React","ReactDOM","Root","DetailPage","FAQPagel","Index","Search","jsxDEV","_jsxDEV","axios","require","options","method","url","headers","response","request","console","log","data","error","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","root","createRoot","document","getElementById","render","StrictMode"],"sources":["/Users/carson/Downloads/react-lxufmk/src/index.js"],"sourcesContent":["import { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n\n// Importing route components\nimport Root from './routes/root';\nimport DetailPage from './routes/details';\nimport FAQPagel from './routes/userFAQ';\nimport Index from './routes/index';\nimport Search from './routes/search';\n\nimport './css/index.css';\n\n/*\nITP 404, Midterm\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nCreate router, loader for react-router-dom\n*/\n\nconst axios = require('axios');\n\nconst options = {\n  method: 'GET',\n  url: 'https://ski-resorts-and-conditions.p.rapidapi.com/v1/resort/whistler-blackcomb',\n  headers: {\n    'X-RapidAPI-Key': '55989d32a6mshcc21389f5a6e365p1f7963jsn4be692249f51',\n    'X-RapidAPI-Host': 'ski-resorts-and-conditions.p.rapidapi.com'\n  }\n};\n\ntry {\n  const response = await axios.request(options);\n  console.log(response.data);\n} catch (error) {\n  console.error(error);\n}\n\n// Create the router with route configurations\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <Root />,\n    children: [\n      {\n        path: '/',\n        element: <Index />,\n      },\n      // {\n      //   path: '/SkiResorts',\n      //   element: <DetailPage />,\n      //   loader() {\n      //     return fetchResorts().then(resortsData => {\n      //       if (!resortsData) {\n      //         return null;\n      //       }\n      //       return { resorts: resortsData };\n      //     });\n      //   },\n      // },\n    ]\n  }\n]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAO,iBAAiB;;AAExB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAMC,OAAO,GAAG;EACdC,MAAM,EAAE,KAAK;EACbC,GAAG,EAAE,gFAAgF;EACrFC,OAAO,EAAE;IACP,gBAAgB,EAAE,oDAAoD;IACtE,iBAAiB,EAAE;EACrB;AACF,CAAC;AAED,IAAI;EACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,OAAO,CAACL,OAAO,CAAC;EAC7CM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;AAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;EACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;AACtB;;AAEA;AACA,MAAMC,MAAM,GAAGvB,mBAAmB,CAAC,CACjC;EACEwB,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEf,OAAA,CAACN,IAAI;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACjBC,QAAQ,EAAE,CACR;IACEN,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEf,OAAA,CAACH,KAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC,CACF,CAAC;;AAEF,MAAME,IAAI,GAAG5B,QAAQ,CAAC6B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTzB,OAAA,CAACR,KAAK,CAACkC,UAAU;EAAAN,QAAA,eACfpB,OAAA,CAACT,cAAc;IAACsB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAClB,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}