{"ast":null,"code":"import _slicedToArray from\"/Users/carson/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import React from'react';/*\nITP 404, Midterm\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nThis file display the common FAQs to user;\ncreate faq array -> load using map -> answer should be viewable at a time\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function userFAQ(){// State to track the selected FAQ question\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),userFAQ=_useState2[0],setUserFAQ=_useState2[1];// data for FAQs\nvar listOfFAQ=[{question:'Are LeafSide meals a form of processed food?',answer:\"No and never, because every LeafSide meal is 100% whole foods plant-based (WFPB). As a company we've always been 100% WFPB since the beginning, and that will never change.\"},{question:'Where does the food come from?',answer:\"We're currently based in Tempe, Arizona, and that's where our meal packs are made. The majority of our ingredients — organic and conventional — are from USA vendors, and in particular, all organic ingredients are USDA-certified organic.\"},{question:'How do I prepare the sweet bowls?',answer:'Mix with boiling water in a covered container and let it sit for 10 minutes.'}];return/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Common Questions\"}),/*#__PURE__*/_jsx(\"p\",{children:\"We're here to help you be more successful with a whole-foods plant-based lifestyle, and your questions are what drive us to improve and create amazing products.\"})]}),listOfFAQ.map(function(faq){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){// Set the selected FAQ to the clicked FAQ. If it's already selected, deselect it.\nsetUserFAQ(userFAQ===faq.question?null:faq.question);},children:faq.question}),userFAQ===faq.question&&/*#__PURE__*/_jsx(\"p\",{children:faq.answer})]},faq.question);}),/*#__PURE__*/_jsx(\"div\",{className:\"listOfFAQ\"})]});}","map":{"version":3,"names":["useState","React","jsx","_jsx","jsxs","_jsxs","userFAQ","_useState","_useState2","_slicedToArray","setUserFAQ","listOfFAQ","question","answer","className","children","map","faq","type","onClick"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/userFAQ.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\n\n/*\nITP 404, Midterm\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nThis file display the common FAQs to user;\ncreate faq array -> load using map -> answer should be viewable at a time\n*/\n\nexport default function userFAQ() {\n  // State to track the selected FAQ question\n  const [userFAQ, setUserFAQ] = useState();\n\n  // data for FAQs\n  const listOfFAQ = [\n    {\n      question: 'Are LeafSide meals a form of processed food?',\n      answer:\n        \"No and never, because every LeafSide meal is 100% whole foods plant-based (WFPB). As a company we've always been 100% WFPB since the beginning, and that will never change.\",\n    },\n    {\n      question: 'Where does the food come from?',\n      answer:\n        \"We're currently based in Tempe, Arizona, and that's where our meal packs are made. The majority of our ingredients — organic and conventional — are from USA vendors, and in particular, all organic ingredients are USDA-certified organic.\",\n    },\n    {\n      question: 'How do I prepare the sweet bowls?',\n      answer:\n        'Mix with boiling water in a covered container and let it sit for 10 minutes.',\n    },\n  ];\n\n  return (\n    <div className=\"page\">\n      <div className=\"title\">\n        <h1>Common Questions</h1>\n        <p>\n          We're here to help you be more successful with a whole-foods\n          plant-based lifestyle, and your questions are what drive us to improve\n          and create amazing products.\n        </p>\n      </div>\n\n      {/* Loop through each FAQ and display the question. If the question is selected, display its answer. */}\n      {listOfFAQ.map((faq) => (\n        <div key={faq.question}>\n          {/* Button to toggle display of the FAQ answer */}\n          <button\n            type=\"button\"\n            onClick={() => {\n              // Set the selected FAQ to the clicked FAQ. If it's already selected, deselect it.\n              setUserFAQ(\n                userFAQ === faq.question ? null : faq.question\n              );\n            }}\n          >\n            {faq.question}\n          </button>\n\n          {/* Display the FAQ answer if its question is selected */}\n          {userFAQ === faq.question && (\n            <p>{faq.answer}</p>\n          )}\n        </div>\n      ))}\n\n      <div className=\"listOfFAQ\"></div>\n    </div>\n  );\n}\n"],"mappings":"uIAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AACA;AACA;AACA;AACA;AACA;AACA,EANA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAQA,cAAe,SAAS,CAAAC,OAAOA,CAAA,CAAG,CAChC;AACA,IAAAC,SAAA,CAA8BP,QAAQ,CAAC,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCD,OAAO,CAAAE,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAE1B;AACA,GAAM,CAAAG,SAAS,CAAG,CAChB,CACEC,QAAQ,CAAE,8CAA8C,CACxDC,MAAM,CACJ,6KACJ,CAAC,CACD,CACED,QAAQ,CAAE,gCAAgC,CAC1CC,MAAM,CACJ,8OACJ,CAAC,CACD,CACED,QAAQ,CAAE,mCAAmC,CAC7CC,MAAM,CACJ,8EACJ,CAAC,CACF,CAED,mBACER,KAAA,QAAKS,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBV,KAAA,QAAKS,SAAS,CAAC,OAAO,CAAAC,QAAA,eACpBZ,IAAA,OAAAY,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBZ,IAAA,MAAAY,QAAA,CAAG,kKAIH,CAAG,CAAC,EACD,CAAC,CAGLJ,SAAS,CAACK,GAAG,CAAC,SAACC,GAAG,qBACjBZ,KAAA,QAAAU,QAAA,eAEEZ,IAAA,WACEe,IAAI,CAAC,QAAQ,CACbC,OAAO,CAAE,SAAAA,QAAA,CAAM,CACb;AACAT,UAAU,CACRJ,OAAO,GAAKW,GAAG,CAACL,QAAQ,CAAG,IAAI,CAAGK,GAAG,CAACL,QACxC,CAAC,CACH,CAAE,CAAAG,QAAA,CAEDE,GAAG,CAACL,QAAQ,CACP,CAAC,CAGRN,OAAO,GAAKW,GAAG,CAACL,QAAQ,eACvBT,IAAA,MAAAY,QAAA,CAAIE,GAAG,CAACJ,MAAM,CAAI,CACnB,GAjBOI,GAAG,CAACL,QAkBT,CAAC,EACP,CAAC,cAEFT,IAAA,QAAKW,SAAS,CAAC,WAAW,CAAM,CAAC,EAC9B,CAAC,CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}