{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/planning.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TripForm() {\n  _s();\n  const [resortList, setResortList] = useState([]);\n  const [year, setYear] = useState('2023');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [resortName, setResortName] = useState('');\n  const [note, setNote] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(''); // Error state\n\n  useEffect(() => {\n    fetch('http://localhost:3000/resorts').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setResortList(data);\n    }).catch(error => {\n      console.error('Error fetching resorts:', error);\n      setError('Failed to load resorts.'); // Set error message\n    });\n  }, []);\n  const handleSubmit = async e => {\n    var _resortList$find;\n    e.preventDefault();\n    setError(''); // Clear previous error\n\n    const newTripDetail = {\n      \"date-start\": startDate,\n      \"date-end\": endDate,\n      resortName,\n      pass: ((_resortList$find = resortList.find(resort => resort.Resort === resortName)) === null || _resortList$find === void 0 ? void 0 : _resortList$find['Ski Pass']) || 'Unknown',\n      note\n    };\n    try {\n      const response = await fetch(\"http://localhost:3000/trips?id_year=\".concat(year));\n      const data = await response.json();\n      if (data.length > 0) {\n        const existingEntry = data[0];\n        existingEntry.details.push(newTripDetail);\n        await fetch(\"http://localhost:3000/trips/\".concat(existingEntry.id), {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(existingEntry)\n        });\n      } else {\n        const newEntry = {\n          id_year: year,\n          details: [newTripDetail]\n        };\n        await fetch('http://localhost:3000/trips', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newEntry)\n        });\n      }\n\n      // Reset form fields\n      setYear('2023');\n      setStartDate('');\n      setEndDate('');\n      setResortName('');\n      setNote('');\n      setSubmitted(true);\n      if (!window.alert(\"You have successfully submitted the form!\")) {\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('An error occurred while submitting the trip.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-row\",\n      children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        class: \"form-control\",\n        min: \"2023\",\n        value: year,\n        onChange: e => setYear(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group col-md-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"inputEmail4\",\n          children: \"Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          class: \"form-control\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group col-md-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"inputPassword4\",\n          children: \"End Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          class: \"form-control\",\n          value: endDate,\n          min: startDate,\n          onChange: e => setEndDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Resort Name:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: resortName,\n        onChange: e => setResortName(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a resort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), resortList.map((resort, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: resort.Resort,\n          children: resort.Resort\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Notes:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(TripForm, \"3OvSM37JYeMnBFfIKN2smsi/KyE=\");\n_c = TripForm;\n;\nvar _c;\n$RefreshReg$(_c, \"TripForm\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","TripForm","_s","resortList","setResortList","year","setYear","startDate","setStartDate","endDate","setEndDate","resortName","setResortName","note","setNote","submitted","setSubmitted","error","setError","fetch","then","response","ok","Error","json","data","catch","console","handleSubmit","e","_resortList$find","preventDefault","newTripDetail","pass","find","resort","Resort","concat","length","existingEntry","details","push","id","method","headers","body","JSON","stringify","newEntry","id_year","window","alert","location","reload","onSubmit","children","class","type","min","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","for","map","index","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/planning.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function TripForm() {\n    const [resortList, setResortList] = useState([]);\n    const [year, setYear] = useState('2023');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [resortName, setResortName] = useState('');\n    const [note, setNote] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    const [error, setError] = useState(''); // Error state\n\n    useEffect(() => {\n        fetch('http://localhost:3000/resorts')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => {\n                setResortList(data);\n            })\n            .catch(error => {\n                console.error('Error fetching resorts:', error);\n                setError('Failed to load resorts.'); // Set error message\n            });\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError(''); // Clear previous error\n\n        const newTripDetail = {\n            \"date-start\": startDate,\n            \"date-end\": endDate,\n            resortName,\n            pass: resortList.find(resort => resort.Resort === resortName)?.['Ski Pass'] || 'Unknown',\n            note\n        };\n\n        try {\n            const response = await fetch(`http://localhost:3000/trips?id_year=${year}`);\n            const data = await response.json();\n\n            if (data.length > 0) {\n                const existingEntry = data[0];\n                existingEntry.details.push(newTripDetail);\n\n                await fetch(`http://localhost:3000/trips/${existingEntry.id}`, {\n                    method: 'PUT',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(existingEntry)\n                });\n            } else {\n                const newEntry = {\n                    id_year: year,\n                    details: [newTripDetail]\n                };\n\n                await fetch('http://localhost:3000/trips', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(newEntry)\n                });\n            }\n\n            // Reset form fields\n            setYear('2023');\n            setStartDate('');\n            setEndDate('');\n            setResortName('');\n            setNote('');\n            setSubmitted(true);\n\n            if (!window.alert(\"You have successfully submitted the form!\")) { window.location.reload(); }\n\n        } catch (error) {\n            console.error('Error:', error);\n            setError('An error occurred while submitting the trip.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div class=\"form-row\">\n                Year:\n                <input type=\"number\" class=\"form-control\" min=\"2023\" value={year} onChange={(e) => setYear(e.target.value)} required />\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-2\">\n                    <label for=\"inputEmail4\">Start Date:</label>\n                    <input type=\"date\" class=\"form-control\" value={startDate} onChange={(e) => setStartDate(e.target.value)} required />\n                </div>\n                <div class=\"form-group col-md-2\">\n                    <label for=\"inputPassword4\">End Date:</label>\n                    <input type=\"date\" class=\"form-control\" value={endDate} min={startDate} onChange={(e) => setEndDate(e.target.value)} required />\n                </div>\n            </div>\n            <label>\n                Select Resort Name:\n                <select value={resortName} onChange={(e) => setResortName(e.target.value)} required>\n                    <option value=\"\">Select a resort</option>\n                    {resortList.map((resort, index) => (\n                        <option key={index} value={resort.Resort}>{resort.Resort}</option>\n                    ))}\n                </select>\n            </label>\n            <label>\n                Notes:\n                <textarea value={note} onChange={(e) => setNote(e.target.value)}></textarea>\n            </label>\n            <button type=\"submit\">Submit</button>\n        </form>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}