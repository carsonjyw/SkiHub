{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/details.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useLoaderData } from 'react-router-dom';\nimport React from 'react';\n\n/*\nITP 404, Midterm\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nThis file load the details for the meal that user selected;\nAllow user to load comments/ add comments (including error check)\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function details() {\n  _s();\n  // Fetch the meal data using react-router's useLoaderData hook\n  const mealDetails = useLoaderData();\n\n  // State to hold reviews: Array\n  const [reviewList, setReviewList] = useState([]);\n\n  // State to handle review submission text\n  const [userInput, setUserInput] = useState('');\n\n  // State to handle errors (like if a review isn't filled out)\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Helper function to render reviews\n  const renderReviews = () => {\n    // If there are reviews, return them in a list\n    if (reviewList.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: reviewList.map((review, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: review\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n    // If no reviews, return a prompt\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews yet. Be the first!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [mealDetails.name, \" (\", mealDetails.category, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total ingredients: \", mealDetails.ingredients.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: mealDetails.ingredients.join(', ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviews\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noreview\",\n        children: renderReviews()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          event.preventDefault();\n\n          // Check if the user input is not empty\n          if (userInput) {\n            // Add the user input to the reviews list\n            setReviewList(prevReviews => [...prevReviews, userInput]);\n\n            // Clear user input and reset any error messages\n            setUserInput('');\n            setErrorMessage(null);\n          } else {\n            // Set an error message if the user input is empty\n            setErrorMessage('Please type a review...');\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userReview\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"review\",\n              className: \"form-label\",\n              children: \"Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"c\",\n            rows: \"4\",\n            value: userInput,\n            onChange: event => {\n              setUserInput(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), errorMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorMessage\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(details, \"5aSMGVc/LMx/lC54IoICg8ZD4zY=\", false, function () {\n  return [useLoaderData];\n});","map":{"version":3,"names":["useState","useLoaderData","React","jsxDEV","_jsxDEV","details","_s","mealDetails","reviewList","setReviewList","userInput","setUserInput","errorMessage","setErrorMessage","renderReviews","length","children","map","review","i","fileName","_jsxFileName","lineNumber","columnNumber","className","name","category","ingredients","join","onSubmit","event","preventDefault","prevReviews","htmlFor","rows","value","onChange","target","type"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/details.js"],"sourcesContent":["import { useState } from 'react';\nimport { useLoaderData } from 'react-router-dom';\nimport React from 'react';\n\n/*\nITP 404, Midterm\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nThis file load the details for the meal that user selected;\nAllow user to load comments/ add comments (including error check)\n*/\n\nexport default function details() {\n  // Fetch the meal data using react-router's useLoaderData hook\n  const mealDetails = useLoaderData();\n\n  // State to hold reviews: Array\n  const [reviewList, setReviewList] = useState([]);\n\n  // State to handle review submission text\n  const [userInput, setUserInput] = useState('');\n\n  // State to handle errors (like if a review isn't filled out)\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Helper function to render reviews\n  const renderReviews = () => {\n    // If there are reviews, return them in a list\n    if (reviewList.length > 0) {\n      return (\n        <ul>\n          {reviewList.map((review, i) => (\n            <li key={i}>{review}</li>\n          ))}\n        </ul>\n      );\n    }\n    // If no reviews, return a prompt\n    return <p>No reviews yet. Be the first!</p>;\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"title\">\n        <h1>\n          {mealDetails.name} ({mealDetails.category})\n        </h1>\n      </div>\n\n      <div className=\"meal-details\">\n        <p>Total ingredients: {mealDetails.ingredients.length}</p>\n        <p>{mealDetails.ingredients.join(', ')}</p>\n      </div>\n\n      <div className=\"reviews\">\n        {/* Display reviews if they exist, otherwise display a prompt */}\n        <div className=\"noreview\">{renderReviews()}</div>\n\n        {/* Review submission form */}\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n\n            // Check if the user input is not empty\n            if (userInput) {\n              // Add the user input to the reviews list\n              setReviewList((prevReviews) => [...prevReviews, userInput]);\n\n              // Clear user input and reset any error messages\n              setUserInput('');\n              setErrorMessage(null);\n            } else {\n              // Set an error message if the user input is empty\n              setErrorMessage('Please type a review...');\n            }\n          }}\n        >\n          <div className=\"userReview\">\n            <p><label htmlFor=\"review\" className=\"form-label\">\n              Review\n            </label></p>\n            <textarea\n              className=\"c\"\n              rows=\"4\"\n              value={userInput}\n              onChange={(event) => {\n                setUserInput(event.target.value);\n              }}\n            />\n\n            {/* Display error message if it exists */}\n            {errorMessage ? (\n              <div className=\"errorMessage\">{errorMessage}</div>\n            ) : null}\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}