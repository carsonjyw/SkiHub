{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n  let {\n    resortName\n  } = _ref;\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [newReview, setNewReview] = useState({\n    author: '',\n    comment: '',\n    rating: ''\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:3000/reviews?resortName=\".concat(encodeURIComponent(resortName))).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setReviews(data);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('There has been a problem with your fetch operation:', error);\n      setIsLoading(false);\n    });\n  }, [resortName]);\n  const handleInputChange = event => {\n    setNewReview({\n      ...newReview,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const reviewToSubmit = {\n      ...newReview,\n      resortName,\n      timestamp: new Date().toISOString()\n    };\n    fetch('http://localhost:3000/reviews', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reviewToSubmit)\n    }).then(response => response.json()).then(data => {\n      setReviews([data, ...reviews]);\n      setNewReview({\n        author: '',\n        comment: '',\n        rating: ''\n      });\n    }).catch(error => console.error('Error posting review:', error));\n  };\n  const sortedReviews = reviews.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Reviews for \", resortName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"author\",\n          value: newReview.author,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"comment\",\n          value: newReview.comment,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Rating:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"rating\",\n          value: newReview.rating,\n          onChange: handleInputChange,\n          min: \"1\",\n          max: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading reviews...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : sortedReviews.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedReviews.map((review, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: review.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 20\n          }, this), \" (\", new Date(review.timestamp).toLocaleDateString(), \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: review.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", review.rating, \" / 5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews available for this resort.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"gdBB1uF2oH7HAK0ds2Y6HyCOOl8=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Comments","_ref","_s","resortName","reviews","setReviews","isLoading","setIsLoading","newReview","setNewReview","author","comment","rating","fetch","concat","encodeURIComponent","then","response","ok","Error","json","data","catch","error","console","handleInputChange","event","target","name","value","handleSubmit","preventDefault","reviewToSubmit","timestamp","Date","toISOString","method","headers","body","JSON","stringify","sortedReviews","sort","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","min","max","length","map","review","index","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Comments({ resortName }) {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [newReview, setNewReview] = useState({\n    author: '',\n    comment: '',\n    rating: '',\n  });\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/reviews?resortName=${encodeURIComponent(resortName)}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setReviews(data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n        setIsLoading(false);\n      });\n  }, [resortName]);\n\n  const handleInputChange = (event) => {\n    setNewReview({ ...newReview, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const reviewToSubmit = {\n      ...newReview,\n      resortName,\n      timestamp: new Date().toISOString()\n    };\n\n    fetch('http://localhost:3000/reviews', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(reviewToSubmit),\n    })\n      .then(response => response.json())\n      .then(data => {\n        setReviews([data, ...reviews]);\n        setNewReview({ author: '', comment: '', rating: '' });\n      })\n      .catch(error => console.error('Error posting review:', error));\n  };\n\n  const sortedReviews = reviews.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n\n  return (\n    <div>\n      <h2>Reviews for {resortName}</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Author:\n          <input\n            type=\"text\"\n            name=\"author\"\n            value={newReview.author}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Comment:\n          <textarea\n            name=\"comment\"\n            value={newReview.comment}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Rating:\n          <input\n            type=\"number\"\n            name=\"rating\"\n            value={newReview.rating}\n            onChange={handleInputChange}\n            min=\"1\" max=\"5\"\n          />\n        </label>\n        <button type=\"submit\">Submit Review</button>\n      </form>\n\n      {isLoading ? (\n        <p>Loading reviews...</p>\n      ) : (\n        sortedReviews.length > 0 ? (\n          <ul>\n            {sortedReviews.map((review, index) => (\n              <li key={index}>\n                <p><strong>{review.author}</strong> ({new Date(review.timestamp).toLocaleDateString()}):</p>\n                <p>{review.comment}</p>\n                <p>Rating: {review.rating} / 5</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No reviews available for this resort.</p>\n        )\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}