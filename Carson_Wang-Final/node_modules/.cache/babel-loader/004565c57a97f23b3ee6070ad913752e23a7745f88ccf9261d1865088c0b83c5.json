{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n  let {\n    resortName\n  } = _ref;\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/reviews?resortName=\".concat(encodeURIComponent(resortName))).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setReviews(data);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('There has been a problem with your fetch operation:', error);\n      setIsLoading(false);\n    });\n  }, [resortName]);\n  const sortedReviews = reviews.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  const [author, setAuthor] = useState('');\n  const [comment, setComment] = useState('');\n  const [rating, setRating] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitting(true);\n    setError('');\n    const newReview = {\n      resortName,\n      author,\n      comment,\n      rating: parseInt(rating, 10),\n      timestamp: new Date().toISOString()\n    };\n    try {\n      const response = await fetch('http://localhost:3000/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newReview)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setAuthor('');\n      setComment('');\n      setRating('');\n      // Optionally, add more logic here, like displaying a success message\n    } catch (error) {\n      console.error('Error posting review:', error);\n      setError('An error occurred while submitting the review.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Reviews for \", resortName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading reviews...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : sortedReviews.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedReviews.map((review, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: review.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 20\n          }, this), \" (\", new Date(review.timestamp).toLocaleDateString(), \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: review.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", review.rating, \" / 5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews available for this resort.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Add a Review for \", resortName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: author,\n              onChange: e => setAuthor(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: comment,\n              onChange: e => setComment(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Rating:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: rating,\n              onChange: e => setRating(e.target.value),\n              min: \"1\",\n              max: \"5\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: submitting,\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"d72wucDGsJaut9qnyPd5fVBG9I8=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Comments","_ref","_s","resortName","reviews","setReviews","isLoading","setIsLoading","fetch","concat","encodeURIComponent","then","response","ok","Error","json","data","catch","error","console","sortedReviews","sort","a","b","Date","timestamp","author","setAuthor","comment","setComment","rating","setRating","submitting","setSubmitting","setError","handleSubmit","e","preventDefault","newReview","parseInt","toISOString","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","review","index","toLocaleDateString","onSubmit","type","value","onChange","target","required","min","max","disabled","className","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Comments({ resortName }) {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/reviews?resortName=${encodeURIComponent(resortName)}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setReviews(data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n        setIsLoading(false);\n      });\n  }, [resortName]);\n\n  const sortedReviews = reviews.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n\n  const [author, setAuthor] = useState('');\n  const [comment, setComment] = useState('');\n  const [rating, setRating] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n    setError('');\n\n    const newReview = {\n      resortName,\n      author,\n      comment,\n      rating: parseInt(rating, 10),\n      timestamp: new Date().toISOString()\n    };\n\n    try {\n      const response = await fetch('http://localhost:3000/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newReview),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setAuthor('');\n      setComment('');\n      setRating('');\n      // Optionally, add more logic here, like displaying a success message\n    } catch (error) {\n      console.error('Error posting review:', error);\n      setError('An error occurred while submitting the review.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Reviews for {resortName}</h2>\n      {isLoading ? (\n        <p>Loading reviews...</p>\n      ) : (\n        sortedReviews.length > 0 ? (\n          <ul>\n            {sortedReviews.map((review, index) => (\n              <li key={index}>\n                <p><strong>{review.author}</strong> ({new Date(review.timestamp).toLocaleDateString()}):</p>\n                <p>{review.comment}</p>\n                <p>Rating: {review.rating} / 5</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No reviews available for this resort.</p>\n        )\n      )}\n      <div>\n        <h3>Add a Review for {resortName}</h3>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label>\n              Author:\n              <input\n                type=\"text\"\n                value={author}\n                onChange={(e) => setAuthor(e.target.value)}\n                required\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Comment:\n              <textarea\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n                required\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Rating:\n              <input\n                type=\"number\"\n                value={rating}\n                onChange={(e) => setRating(e.target.value)}\n                min=\"1\"\n                max=\"5\"\n                required\n              />\n            </label>\n          </div>\n          <button type=\"submit\" disabled={submitting}>Submit Review</button>\n          {error && <p className=\"error\">{error}</p>}\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}