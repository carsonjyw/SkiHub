{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/Carson_Wang-Final/src/routes/saveResorts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Assuming you're using react-router\nimport ModalDialog from './reuseable'; // Import the ModalDialog component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SavedResorts() {\n  _s();\n  const resortList = useLoaderData();\n  const [savedResorts, setSavedResorts] = useState([]);\n  useEffect(() => {\n    const sortedResorts = resortList.sort((a, b) => a.Resort.localeCompare(b.Resort));\n    setSavedResorts(sortedResorts);\n  }, [resortList]);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [selectedResortId, setSelectedResortId] = useState(null);\n  const handleDelete = resortId => {\n    fetch(\"http://localhost:3000/saved/\".concat(resortId), {\n      method: 'DELETE'\n    }).then(() => {\n      setSavedResorts(savedResorts.filter(resort => resort.id !== resortId));\n      setModalOpen(false); // Close the modal on successful deletion\n    }).catch(error => {\n      console.error('Error deleting resort:', error);\n      setModalOpen(false); // Close the modal on error\n    });\n  };\n\n  const openDeleteModal = resortId => {\n    setSelectedResortId(resortId);\n    setModalOpen(true);\n  };\n  const width = \"18rem\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Saved Resorts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), savedResorts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: width\n      },\n      children: savedResorts.map((resort, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [resort.Resort, \" in \", resort['Location (State)']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"card-link\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/resort-details/\".concat(resort.Resort),\n                children: \"Detail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 97\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"card-link\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light mb-3\",\n              onClick: () => openDeleteModal(resort.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You have not saved any resorts yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ModalDialog, {\n      isOpen: isModalOpen,\n      onClose: () => setModalOpen(false),\n      title: \"Confirm Delete\",\n      onAction: () => handleDelete(selectedResortId),\n      actionSuccessMessage: \"Resort successfully deleted.\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this resort?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(SavedResorts, \"IjpEsHzFwRcEBf1pOTPcHRUVQiY=\", true);\n_c = SavedResorts;\nvar _c;\n$RefreshReg$(_c, \"SavedResorts\");","map":{"version":3,"names":["React","useState","useEffect","Link","ModalDialog","jsxDEV","_jsxDEV","SavedResorts","_s","resortList","useLoaderData","savedResorts","setSavedResorts","sortedResorts","sort","a","b","Resort","localeCompare","isModalOpen","setModalOpen","selectedResortId","setSelectedResortId","handleDelete","resortId","fetch","concat","method","then","filter","resort","id","catch","error","console","openDeleteModal","width","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","map","index","to","onClick","isOpen","onClose","title","onAction","actionSuccessMessage","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/Carson_Wang-Final/src/routes/saveResorts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Assuming you're using react-router\nimport ModalDialog from './reuseable'; // Import the ModalDialog component\n\nexport default function SavedResorts() {\n    const resortList = useLoaderData();\n    const [savedResorts, setSavedResorts] = useState([]);\n\n    useEffect(() => {\n        const sortedResorts = resortList.sort((a, b) => a.Resort.localeCompare(b.Resort));\n        setSavedResorts(sortedResorts);\n    }, [resortList]);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [selectedResortId, setSelectedResortId] = useState(null);\n\n    const handleDelete = (resortId) => {\n        fetch(`http://localhost:3000/saved/${resortId}`, { method: 'DELETE' })\n            .then(() => {\n                setSavedResorts(savedResorts.filter(resort => resort.id !== resortId));\n                setModalOpen(false); // Close the modal on successful deletion\n            })\n            .catch(error => {\n                console.error('Error deleting resort:', error);\n                setModalOpen(false); // Close the modal on error\n            });\n    };\n\n    const openDeleteModal = (resortId) => {\n        setSelectedResortId(resortId);\n        setModalOpen(true);\n    };\n\n    const width = \"18rem\";\n\n    return (\n        <div className='page'>\n            <h4>Saved Resorts</h4>\n            <hr />\n            {savedResorts.length > 0 ? (\n                <div className=\"card\" style={{ width: width }}>\n                    {savedResorts.map((resort, index) => (\n                        <ul key={index} className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item\">\n                                <h6>{resort.Resort} in {resort['Location (State)']}</h6>\n                                <a className=\"card-link\"><button className=\"btn btn-light mb-3\"><Link to={`/resort-details/${resort.Resort}`}>Detail</Link></button></a>\n                                <a className=\"card-link\"><button className=\"btn btn-light mb-3\" onClick={() => openDeleteModal(resort.id)}>Delete</button></a>\n                            </li>\n                        </ul>\n                    ))}\n                </div>\n            ) : (\n                <p>You have not saved any resorts yet.</p>\n            )}\n\n            <ModalDialog\n                isOpen={isModalOpen}\n                onClose={() => setModalOpen(false)}\n                title=\"Confirm Delete\"\n                onAction={() => handleDelete(selectedResortId)}\n                actionSuccessMessage=\"Resort successfully deleted.\"\n            >\n                <p>Are you sure you want to delete this resort?</p>\n            </ModalDialog>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}