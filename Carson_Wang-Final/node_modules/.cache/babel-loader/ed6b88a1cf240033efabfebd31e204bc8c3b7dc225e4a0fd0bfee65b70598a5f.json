{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/details.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Details() {\n  // Fetch the resort data using react-router's useLoaderData hook\n  const loaderData = {\n    slug: 'whistler-blackcomb',\n    name: 'Whistler Blackcomb',\n    country: 'CA',\n    region: 'BC',\n    href: 'http://www.whistlerblackcomb.com/the-mountain/lifts-and-grooming/index.aspx'\n  };\n\n  // // Initialize the resorts state as an array, using the data from the loader if available\n  // const [resorts, setResorts] = useState(loaderData?.data || []);\n\n  // // Make sure to check if loaderData.data is an array before setting the state\n  // useEffect(() => {\n  //   if (Array.isArray(loaderData?.data)) {\n  //     setResorts(loaderData.data);\n  //   }\n  // }, [loaderData]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ski Resorts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), Array.isArray(resorts) && resorts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: resorts.map(resort => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: resort.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [resort.region, \", \", resort.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: resort.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, resort.slug, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No resorts found or data is not an array.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","useState","useEffect","useLoaderData","jsxDEV","_jsxDEV","Details","loaderData","slug","name","country","region","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","resorts","length","map","resort","url","target","rel","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/details.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLoaderData } from 'react-router-dom';\n\nexport default function Details() {\n  // Fetch the resort data using react-router's useLoaderData hook\n  const loaderData = { slug: 'whistler-blackcomb', name: 'Whistler Blackcomb', country: 'CA', region: 'BC', href: 'http://www.whistlerblackcomb.com/the-mountain/lifts-and-grooming/index.aspx' };\n\n  // // Initialize the resorts state as an array, using the data from the loader if available\n  // const [resorts, setResorts] = useState(loaderData?.data || []);\n\n  // // Make sure to check if loaderData.data is an array before setting the state\n  // useEffect(() => {\n  //   if (Array.isArray(loaderData?.data)) {\n  //     setResorts(loaderData.data);\n  //   }\n  // }, [loaderData]);\n\n  return (\n    <div className=\"page\">\n      <h1>Ski Resorts</h1>\n      {Array.isArray(resorts) && resorts.length > 0 ? (\n        <ul>\n          {resorts.map((resort) => (\n            <li key={resort.slug}>\n              <h2>{resort.name}</h2>\n              <p>{resort.region}, {resort.country}</p>\n              <a href={resort.url} target=\"_blank\" rel=\"noopener noreferrer\">View More</a>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No resorts found or data is not an array.</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC;EACA,MAAMC,UAAU,GAAG;IAAEC,IAAI,EAAE,oBAAoB;IAAEC,IAAI,EAAE,oBAAoB;IAAEC,OAAO,EAAE,IAAI;IAAEC,MAAM,EAAE,IAAI;IAAEC,IAAI,EAAE;EAA8E,CAAC;;EAE/L;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEP,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBT,OAAA;MAAAS,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBC,KAAK,CAACC,OAAO,CAACC,OAAO,CAAC,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,gBAC3CjB,OAAA;MAAAS,QAAA,EACGO,OAAO,CAACE,GAAG,CAAEC,MAAM,iBAClBnB,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,EAAKU,MAAM,CAACf;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBb,OAAA;UAAAS,QAAA,GAAIU,MAAM,CAACb,MAAM,EAAC,IAAE,EAACa,MAAM,CAACd,OAAO;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCb,OAAA;UAAGO,IAAI,EAAEY,MAAM,CAACC,GAAI;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAb,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAHrEM,MAAM,CAAChB,IAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELb,OAAA;MAAAS,QAAA,EAAG;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACU,EAAA,GAhCuBtB,OAAO;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}