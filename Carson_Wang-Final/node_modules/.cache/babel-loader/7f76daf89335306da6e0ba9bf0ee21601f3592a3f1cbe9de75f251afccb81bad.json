{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/details.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Details() {\n  _s();\n  // Fetch the resort data using react-router's useLoaderData hook\n  const resortData = useLoaderData();\n\n  // Initialize the resorts state to an empty array\n  const [resorts, setResorts] = useState([]);\n\n  // Effect hook to update the resorts state\n  // only if resortData is an array\n  useEffect(() => {\n    if (Array.isArray(resortData)) {\n      setResorts(resortData);\n    }\n    console.log(resorts);\n  }, [resortData]); // Dependency on resortData\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ski Resorts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: resorts.map(resort => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: resort.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [resort.region, \", \", resort.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: resort.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, resort.slug, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Details, \"g4h6UeoybzhD+x8fILJ6q/NmLzI=\", false, function () {\n  return [useLoaderData];\n});\n_c = Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","useState","useEffect","useLoaderData","jsxDEV","_jsxDEV","Details","_s","resortData","resorts","setResorts","Array","isArray","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","resort","name","region","country","href","url","target","rel","slug","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/details.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLoaderData } from 'react-router-dom';\n\nexport default function Details() {\n  // Fetch the resort data using react-router's useLoaderData hook\n  const resortData = useLoaderData();\n\n  // Initialize the resorts state to an empty array\n  const [resorts, setResorts] = useState([]);\n\n  // Effect hook to update the resorts state\n  // only if resortData is an array\n  useEffect(() => {\n    if (Array.isArray(resortData)) {\n      setResorts(resortData);\n    }\n    console.log(resorts);\n  }, [resortData]); // Dependency on resortData\n\n  return (\n    <div className=\"page\">\n      <h1>Ski Resorts</h1>\n      <ul>\n        {resorts.map((resort) => (\n          <li key={resort.slug}>\n            <h2>{resort.name}</h2>\n            <p>{resort.region}, {resort.country}</p>\n            <a href={resort.url} target=\"_blank\" rel=\"noopener noreferrer\">View More</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC;EACA,MAAMC,UAAU,GAAGL,aAAa,CAAC,CAAC;;EAElC;EACA,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA;EACAC,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,CAACC,OAAO,CAACJ,UAAU,CAAC,EAAE;MAC7BE,UAAU,CAACF,UAAU,CAAC;IACxB;IACAK,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EACtB,CAAC,EAAE,CAACD,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,oBACEH,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBX,OAAA;MAAAW,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBf,OAAA;MAAAW,QAAA,EACGP,OAAO,CAACY,GAAG,CAAEC,MAAM,iBAClBjB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,EAAKM,MAAM,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBf,OAAA;UAAAW,QAAA,GAAIM,MAAM,CAACE,MAAM,EAAC,IAAE,EAACF,MAAM,CAACG,OAAO;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCf,OAAA;UAAGqB,IAAI,EAAEJ,MAAM,CAACK,GAAI;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAb,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAHrEE,MAAM,CAACQ,IAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACb,EAAA,CA9BuBD,OAAO;EAAA,QAEVH,aAAa;AAAA;AAAA4B,EAAA,GAFVzB,OAAO;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}