{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/admin.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResortManagement() {\n  _s();\n  // States for saved resorts\n  const [savedResorts, setSavedResorts] = useState([]);\n  const [selectedSavedResorts, setSelectedSavedResorts] = useState(new Set());\n  const selectAllSavedRef = useRef(null);\n\n  // States for reviews\n  const [reviews, setReviews] = useState([]);\n\n  // States for trips\n  const [trips, setTrips] = useState([]);\n\n  // Fetch Saved Resorts\n  useEffect(() => {\n    fetch('http://localhost:3000/saved').then(response => response.json()).then(data => setSavedResorts(data)).catch(error => console.error('Error:', error));\n  }, []);\n\n  // Fetch Reviews\n  useEffect(() => {\n    fetch('http://localhost:3000/reviews').then(response => response.json()).then(data => setReviews(data)).catch(error => console.error('Error:', error));\n  }, []);\n\n  // Fetch Trips\n  useEffect(() => {\n    fetch('http://localhost:3000/trips').then(response => response.json()).then(data => setTrips(data)).catch(error => console.error('Error:', error));\n  }, []);\n\n  // Handle Select All for Saved Resorts\n  useEffect(() => {\n    if (selectAllSavedRef.current) {\n      selectAllSavedRef.current.indeterminate = selectedSavedResorts.size > 0 && selectedSavedResorts.size < savedResorts.length;\n    }\n  }, [selectedSavedResorts, savedResorts]);\n  const handleSelectAllSaved = isChecked => {\n    setSelectedSavedResorts(new Set(isChecked ? savedResorts.map(r => r.id) : []));\n  };\n\n  // Other handler functions (e.g., handleDeleteSelected, handleSelectSavedResort) would go here\n\n  // Render Component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Resort Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Saved Resorts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: \"Select All\",\n      checked: selectedSavedResorts.size === savedResorts.length,\n      isIndeterminate: selectedSavedResorts.size > 0 && selectedSavedResorts.size < savedResorts.length,\n      onChange: isChecked => handleSelectAllSaved(isChecked),\n      ref: selectAllSavedRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), savedResorts.map(resort => /*#__PURE__*/_jsxDEV(\"div\", {}, resort.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ResortManagement, \"Pvw4TX7rJj3eVhRtX1EMYHH/QWY=\");\n_c = ResortManagement;\nfunction Checkbox(_ref) {\n  _s2();\n  let {\n    label,\n    checked,\n    isIndeterminate,\n    onChange,\n    ref\n  } = _ref;\n  useEffect(() => {\n    ref.current.indeterminate = isIndeterminate;\n  }, [isIndeterminate]);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      ref: ref,\n      checked: checked,\n      onChange: event => onChange(event.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s2(Checkbox, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Checkbox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResortManagement\");\n$RefreshReg$(_c2, \"Checkbox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","jsxDEV","_jsxDEV","ResortManagement","_s","savedResorts","setSavedResorts","selectedSavedResorts","setSelectedSavedResorts","Set","selectAllSavedRef","reviews","setReviews","trips","setTrips","fetch","then","response","json","data","catch","error","console","current","indeterminate","size","length","handleSelectAllSaved","isChecked","map","r","id","children","fileName","_jsxFileName","lineNumber","columnNumber","Checkbox","label","checked","isIndeterminate","onChange","ref","resort","_c","_ref","_s2","type","event","target","_c2","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/admin.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function ResortManagement() {\n    // States for saved resorts\n    const [savedResorts, setSavedResorts] = useState([]);\n    const [selectedSavedResorts, setSelectedSavedResorts] = useState(new Set());\n    const selectAllSavedRef = useRef(null);\n\n    // States for reviews\n    const [reviews, setReviews] = useState([]);\n\n    // States for trips\n    const [trips, setTrips] = useState([]);\n\n    // Fetch Saved Resorts\n    useEffect(() => {\n        fetch('http://localhost:3000/saved')\n            .then(response => response.json())\n            .then(data => setSavedResorts(data))\n            .catch(error => console.error('Error:', error));\n    }, []);\n\n    // Fetch Reviews\n    useEffect(() => {\n        fetch('http://localhost:3000/reviews')\n            .then(response => response.json())\n            .then(data => setReviews(data))\n            .catch(error => console.error('Error:', error));\n    }, []);\n\n    // Fetch Trips\n    useEffect(() => {\n        fetch('http://localhost:3000/trips')\n            .then(response => response.json())\n            .then(data => setTrips(data))\n            .catch(error => console.error('Error:', error));\n    }, []);\n\n    // Handle Select All for Saved Resorts\n    useEffect(() => {\n        if (selectAllSavedRef.current) {\n            selectAllSavedRef.current.indeterminate =\n                selectedSavedResorts.size > 0 && selectedSavedResorts.size < savedResorts.length;\n        }\n    }, [selectedSavedResorts, savedResorts]);\n\n    const handleSelectAllSaved = (isChecked) => {\n        setSelectedSavedResorts(new Set(isChecked ? savedResorts.map(r => r.id) : []));\n    };\n\n    // Other handler functions (e.g., handleDeleteSelected, handleSelectSavedResort) would go here\n\n    // Render Component\n    return (\n        <div>\n            <h1>Resort Management</h1>\n            <h2>Saved Resorts</h2>\n            <Checkbox\n                label=\"Select All\"\n                checked={selectedSavedResorts.size === savedResorts.length}\n                isIndeterminate={selectedSavedResorts.size > 0 && selectedSavedResorts.size < savedResorts.length}\n                onChange={(isChecked) => handleSelectAllSaved(isChecked)}\n                ref={selectAllSavedRef}\n            />\n            {savedResorts.map(resort => (\n                <div key={resort.id}>\n                    {/* Render each saved resort */}\n                </div>\n            ))}\n            {/* Add button for deleting selected saved resorts */}\n\n            <h2>Reviews</h2>\n            {/* Render reviews */}\n\n            <h2>Trips</h2>\n            {/* Render trips */}\n        </div>\n    );\n}\n\nfunction Checkbox({ label, checked, isIndeterminate, onChange, ref }) {\n    useEffect(() => {\n        ref.current.indeterminate = isIndeterminate;\n    }, [isIndeterminate]);\n\n    return (\n        <label>\n            <input\n                type=\"checkbox\"\n                ref={ref}\n                checked={checked}\n                onChange={(event) => onChange(event.target.checked)}\n            />\n            {label}\n        </label>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}