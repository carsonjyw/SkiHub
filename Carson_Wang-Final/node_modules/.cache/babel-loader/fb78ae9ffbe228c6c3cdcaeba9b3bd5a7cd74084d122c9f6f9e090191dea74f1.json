{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/Carson_Wang-Final/src/routes/save.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n/*\nITP 404, Final\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Saved(_ref) {\n  _s();\n  let {\n    resortName\n  } = _ref;\n  const [resort, setResort] = useState([]);\n  const [isSaved, setIsSaved] = useState(false);\n  useEffect(() => {\n    const fetchUrl = \"http://localhost:3000/resorts?Resort=\".concat(encodeURIComponent(resortName));\n    fetch(fetchUrl).then(response => response.json()).then(data => {\n      console.log(\"Fetched data:\", data);\n      if (data.length > 0) {\n        setResort(data[0]);\n      } else {\n        console.log('No resort found with the name:', resortName);\n      }\n    }).catch(error => console.error('Error fetching resort:', error));\n    fetch(\"http://localhost:3000/saved?resortName=\".concat(encodeURIComponent(resortName))).then(response => response.json()).then(data => setIsSaved(data.length > 0)).catch(error => console.error('Error:', error));\n  }, [resortName]);\n  const handleSave = () => {\n    if (isSaved) {\n      fetch(\"http://localhost:3000/saved?resortName=\".concat(encodeURIComponent(resortName))).then(response => response.json()).then(savedItems => {\n        if (savedItems.length > 0) {\n          return fetch(\"http://localhost:3000/saved/\".concat(savedItems[0].id), {\n            method: 'DELETE'\n          });\n        }\n        throw new Error('Item not found for deletion.');\n      }).then(() => setIsSaved(false)).catch(error => console.error('Error:', error));\n      toast(\"You have successfully delete this resort!\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000,\n        type: toast.TYPE.DEFAULT\n      });\n    } else {\n      const resortToSave = {\n        ...resort,\n        resortName\n      };\n      fetch('http://localhost:3000/saved', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(resortToSave)\n      }).then(() => setIsSaved(true)).catch(error => console.error('Error:', error));\n      toast(\"You have successfully save this resort!\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000,\n        type: toast.TYPE.DEFAULT\n      });\n    }\n  };\n  if (!resort) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      onClick: handleSave,\n      children: isSaved ? 'Unsave Resort' : 'Save Resort'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Saved, \"SUyTb283K8lsaI7e4C+H8hCYcfA=\");\n_c = Saved;\nvar _c;\n$RefreshReg$(_c, \"Saved\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Saved","_ref","_s","resortName","resort","setResort","isSaved","setIsSaved","fetchUrl","concat","encodeURIComponent","fetch","then","response","json","data","console","log","length","catch","error","handleSave","savedItems","id","method","Error","toast","position","POSITION","TOP_RIGHT","autoClose","type","TYPE","DEFAULT","resortToSave","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/Carson_Wang-Final/src/routes/save.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n/*\nITP 404, Final\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\n*/\n\nexport default function Saved({ resortName }) {\n    const [resort, setResort] = useState([]);\n    const [isSaved, setIsSaved] = useState(false);\n\n    useEffect(() => {\n        const fetchUrl = `http://localhost:3000/resorts?Resort=${encodeURIComponent(resortName)}`;\n\n        fetch(fetchUrl)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Fetched data:\", data);\n                if (data.length > 0) {\n                    setResort(data[0]);\n                } else {\n                    console.log('No resort found with the name:', resortName);\n                }\n            })\n            .catch(error => console.error('Error fetching resort:', error));\n\n        fetch(`http://localhost:3000/saved?resortName=${encodeURIComponent(resortName)}`)\n            .then(response => response.json())\n            .then(data => setIsSaved(data.length > 0))\n            .catch(error => console.error('Error:', error));\n    }, [resortName]);\n\n    const handleSave = () => {\n        if (isSaved) {\n            fetch(`http://localhost:3000/saved?resortName=${encodeURIComponent(resortName)}`)\n                .then(response => response.json())\n                .then(savedItems => {\n                    if (savedItems.length > 0) {\n                        return fetch(`http://localhost:3000/saved/${savedItems[0].id}`, { method: 'DELETE' });\n                    }\n                    throw new Error('Item not found for deletion.');\n                })\n                .then(() => setIsSaved(false))\n                .catch(error => console.error('Error:', error));\n            toast(\"You have successfully delete this resort!\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 5000,\n                type: toast.TYPE.DEFAULT\n            });\n        } else {\n            const resortToSave = {\n                ...resort,\n                resortName\n            };\n\n            fetch('http://localhost:3000/saved', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(resortToSave)\n            })\n                .then(() => setIsSaved(true))\n                .catch(error => console.error('Error:', error));\n            toast(\"You have successfully save this resort!\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 5000,\n                type: toast.TYPE.DEFAULT\n            });\n        }\n    };\n\n    if (!resort) return <p>Loading...</p>;\n\n    return (\n        <div>\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={handleSave}>\n                {isSaved ? 'Unsave Resort' : 'Save Resort'}\n            </button>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}