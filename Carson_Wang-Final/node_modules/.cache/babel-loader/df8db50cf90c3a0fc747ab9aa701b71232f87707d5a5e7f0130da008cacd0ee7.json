{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/planning.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TripForm() {\n  _s();\n  const [resortList, setResortList] = useState([]);\n  const [year, setYear] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [resortName, setResortName] = useState('');\n  const [note, setNote] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:3000/resorts').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data); // Log to see the structure of the fetched data\n      setResortList(data); // Adjust this line if the structure is different\n      console.log(resortList);\n    }).catch(error => {\n      console.error('Error fetching resorts:', error);\n    });\n  }, []);\n  const handleSubmit = async e => {\n    var _resortList$find;\n    e.preventDefault();\n    setSubmitted(true);\n    setError('');\n    const newTripDetail = {\n      \"date-start\": startDate,\n      \"date-end\": endDate,\n      resortName,\n      pass: ((_resortList$find = resortList.find(resort => resort.Resort === resortName)) === null || _resortList$find === void 0 ? void 0 : _resortList$find['Ski Pass']) || 'Unknown',\n      note\n    };\n    try {\n      // First, check if the year already exists\n      const response = await fetch(\"http://localhost:3000/trips?id_year=\".concat(year));\n      const data = await response.json();\n      if (data.length > 0) {\n        // Year exists, update the existing entry\n        const existingEntry = data[0];\n        existingEntry.details.push(newTripDetail);\n        await fetch(\"http://localhost:3000/trips/\".concat(existingEntry.id), {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(existingEntry)\n        });\n      } else {\n        // Year does not exist, create a new entry\n        const newEntry = {\n          id_year: year,\n          details: [newTripDetail]\n        };\n        await fetch('http://localhost:3000/trips', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newEntry)\n        });\n      }\n      setSubmitted(true);\n      // Reset form fields here if necessary\n    } catch (error) {\n      console.error('Error:', error);\n      setError('An error occurred while submitting the trip.');\n    } finally {\n      setSubmitted(false);\n    }\n  };\n  if (submitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have successfully submitted the form!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSubmitted(false),\n        children: \"Add another one?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/my-trips\",\n        children: \"View my trips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: year,\n        onChange: e => setYear(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: endDate,\n        min: startDate,\n        onChange: e => setEndDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Resort Name:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: resortName,\n        onChange: e => setResortName(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a resort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), resortList.map((resort, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: resort.Resort,\n          children: resort.Resort\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Notes:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(TripForm, \"xJFNI9RMeuf8K0Ic3E+11UonaTE=\");\n_c = TripForm;\n;\nvar _c;\n$RefreshReg$(_c, \"TripForm\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","TripForm","_s","resortList","setResortList","year","setYear","startDate","setStartDate","endDate","setEndDate","resortName","setResortName","note","setNote","submitted","setSubmitted","fetch","then","response","ok","Error","json","data","console","log","catch","error","handleSubmit","e","_resortList$find","preventDefault","setError","newTripDetail","pass","find","resort","Resort","concat","length","existingEntry","details","push","id","method","headers","body","JSON","stringify","newEntry","id_year","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","onSubmit","type","value","onChange","target","required","min","map","index","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/planning.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function TripForm() {\n    const [resortList, setResortList] = useState([]);\n    const [year, setYear] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [resortName, setResortName] = useState('');\n    const [note, setNote] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n\n    useEffect(() => {\n        fetch('http://localhost:3000/resorts')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => {\n                console.log(data); // Log to see the structure of the fetched data\n                setResortList(data); // Adjust this line if the structure is different\n                console.log(resortList)\n            })\n            .catch(error => {\n                console.error('Error fetching resorts:', error);\n            });\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setSubmitted(true);\n        setError('');\n\n        const newTripDetail = {\n            \"date-start\": startDate,\n            \"date-end\": endDate,\n            resortName,\n            pass: resortList.find(resort => resort.Resort === resortName)?.['Ski Pass'] || 'Unknown',\n            note\n        };\n\n        try {\n            // First, check if the year already exists\n            const response = await fetch(`http://localhost:3000/trips?id_year=${year}`);\n            const data = await response.json();\n\n            if (data.length > 0) {\n                // Year exists, update the existing entry\n                const existingEntry = data[0];\n                existingEntry.details.push(newTripDetail);\n\n                await fetch(`http://localhost:3000/trips/${existingEntry.id}`, {\n                    method: 'PUT',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(existingEntry)\n                });\n            } else {\n                // Year does not exist, create a new entry\n                const newEntry = {\n                    id_year: year,\n                    details: [newTripDetail]\n                };\n\n                await fetch('http://localhost:3000/trips', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(newEntry)\n                });\n            }\n\n            setSubmitted(true);\n            // Reset form fields here if necessary\n        } catch (error) {\n            console.error('Error:', error);\n            setError('An error occurred while submitting the trip.');\n        } finally {\n            setSubmitted(false);\n        }\n    };\n\n    if (submitted) {\n        return (\n            <div>\n                <p>You have successfully submitted the form!</p>\n                <button onClick={() => setSubmitted(false)}>Add another one?</button>\n                <Link to=\"/my-trips\">View my trips</Link>\n            </div>\n        );\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {/* Year */}\n            <label>\n                Year:\n                <input type=\"number\" value={year} onChange={(e) => setYear(e.target.value)} required />\n            </label>\n            {/* Start Date */}\n            <label>\n                Start Date:\n                <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} required />\n            </label>\n            {/* End Date */}\n            <label>\n                End Date:\n                <input type=\"date\" value={endDate} min={startDate} onChange={(e) => setEndDate(e.target.value)} required />\n            </label>\n            {/* Select Resort Name */}\n            <label>\n                Select Resort Name:\n                <select value={resortName} onChange={(e) => setResortName(e.target.value)} required>\n                    <option value=\"\">Select a resort</option>\n                    {resortList.map((resort, index) => (\n                        <option key={index} value={resort.Resort}>{resort.Resort}</option>\n                    ))}\n                </select>\n            </label>\n            {/* Notes */}\n            <label>\n                Notes:\n                <textarea value={note} onChange={(e) => setNote(e.target.value)}></textarea>\n            </label>\n            {/* Submit Button */}\n            <button type=\"submit\">Submit</button>\n        </form>\n    );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}