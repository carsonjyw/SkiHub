{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/userFAQ.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\n\n/*\nITP 404, Midterm\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nThis file display the common FAQs to user;\ncreate faq array -> load using map -> answer should be viewable at a time\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function userFAQ() {\n  _s();\n  // State to track the selected FAQ question\n  const [userFAQ, setUserFAQ] = useState();\n\n  // data for FAQs\n  const listOfFAQ = [{\n    question: 'Are LeafSide meals a form of processed food?',\n    answer: \"No and never, because every LeafSide meal is 100% whole foods plant-based (WFPB). As a company we've always been 100% WFPB since the beginning, and that will never change.\"\n  }, {\n    question: 'Where does the food come from?',\n    answer: \"We're currently based in Tempe, Arizona, and that's where our meal packs are made. The majority of our ingredients — organic and conventional — are from USA vendors, and in particular, all organic ingredients are USDA-certified organic.\"\n  }, {\n    question: 'How do I prepare the sweet bowls?',\n    answer: 'Mix with boiling water in a covered container and let it sit for 10 minutes.'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Common Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We're here to help you be more successful with a whole-foods plant-based lifestyle, and your questions are what drive us to improve and create amazing products.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), listOfFAQ.map(faq => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          // Set the selected FAQ to the clicked FAQ. If it's already selected, deselect it.\n          setUserFAQ(userFAQ === faq.question ? null : faq.question);\n        },\n        children: faq.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), userFAQ === faq.question && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: faq.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, faq.question, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listOfFAQ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(userFAQ, \"6drYfgjjwz1DyfdrvNetZLZOZbk=\");","map":{"version":3,"names":["useState","React","jsxDEV","_jsxDEV","userFAQ","_s","setUserFAQ","listOfFAQ","question","answer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","faq","type","onClick"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/userFAQ.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\n\n/*\nITP 404, Midterm\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nThis file display the common FAQs to user;\ncreate faq array -> load using map -> answer should be viewable at a time\n*/\n\nexport default function userFAQ() {\n  // State to track the selected FAQ question\n  const [userFAQ, setUserFAQ] = useState();\n\n  // data for FAQs\n  const listOfFAQ = [\n    {\n      question: 'Are LeafSide meals a form of processed food?',\n      answer:\n        \"No and never, because every LeafSide meal is 100% whole foods plant-based (WFPB). As a company we've always been 100% WFPB since the beginning, and that will never change.\",\n    },\n    {\n      question: 'Where does the food come from?',\n      answer:\n        \"We're currently based in Tempe, Arizona, and that's where our meal packs are made. The majority of our ingredients — organic and conventional — are from USA vendors, and in particular, all organic ingredients are USDA-certified organic.\",\n    },\n    {\n      question: 'How do I prepare the sweet bowls?',\n      answer:\n        'Mix with boiling water in a covered container and let it sit for 10 minutes.',\n    },\n  ];\n\n  return (\n    <div className=\"page\">\n      <div className=\"title\">\n        <h1>Common Questions</h1>\n        <p>\n          We're here to help you be more successful with a whole-foods\n          plant-based lifestyle, and your questions are what drive us to improve\n          and create amazing products.\n        </p>\n      </div>\n\n      {/* Loop through each FAQ and display the question. If the question is selected, display its answer. */}\n      {listOfFAQ.map((faq) => (\n        <div key={faq.question}>\n          {/* Button to toggle display of the FAQ answer */}\n          <button\n            type=\"button\"\n            onClick={() => {\n              // Set the selected FAQ to the clicked FAQ. If it's already selected, deselect it.\n              setUserFAQ(\n                userFAQ === faq.question ? null : faq.question\n              );\n            }}\n          >\n            {faq.question}\n          </button>\n\n          {/* Display the FAQ answer if its question is selected */}\n          {userFAQ === faq.question && (\n            <p>{faq.answer}</p>\n          )}\n        </div>\n      ))}\n\n      <div className=\"listOfFAQ\"></div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAQA,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC;EACA,MAAM,CAACD,OAAO,EAAEE,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC;;EAExC;EACA,MAAMO,SAAS,GAAG,CAChB;IACEC,QAAQ,EAAE,8CAA8C;IACxDC,MAAM,EACJ;EACJ,CAAC,EACD;IACED,QAAQ,EAAE,gCAAgC;IAC1CC,MAAM,EACJ;EACJ,CAAC,EACD;IACED,QAAQ,EAAE,mCAAmC;IAC7CC,MAAM,EACJ;EACJ,CAAC,CACF;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBR,OAAA;MAAKO,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBR,OAAA;QAAAQ,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBZ,OAAA;QAAAQ,QAAA,EAAG;MAIH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGLR,SAAS,CAACS,GAAG,CAAEC,GAAG,iBACjBd,OAAA;MAAAQ,QAAA,gBAEER,OAAA;QACEe,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEA,CAAA,KAAM;UACb;UACAb,UAAU,CACRF,OAAO,KAAKa,GAAG,CAACT,QAAQ,GAAG,IAAI,GAAGS,GAAG,CAACT,QACxC,CAAC;QACH,CAAE;QAAAG,QAAA,EAEDM,GAAG,CAACT;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,EAGRX,OAAO,KAAKa,GAAG,CAACT,QAAQ,iBACvBL,OAAA;QAAAQ,QAAA,EAAIM,GAAG,CAACR;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACnB;IAAA,GAjBOE,GAAG,CAACT,QAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBjB,CACN,CAAC,eAEFZ,OAAA;MAAKO,SAAS,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAACV,EAAA,CA5DuBD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}