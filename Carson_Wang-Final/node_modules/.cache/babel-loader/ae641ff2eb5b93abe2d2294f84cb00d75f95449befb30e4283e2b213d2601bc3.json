{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useLoaderData, Link } from 'react-router-dom';\n\n/*\nITP 404, Final Project\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nThis file is for the home page which shows user list of meals, and allow user to conduct search function.\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function mainPage() {\n  _s();\n  const resortList = useLoaderData();\n  const [searchResort, setSearchResort] = useState(resortList);\n  const [displayedResorts, setDisplayedResorts] = useState([]);\n\n  // Function to get 5 random resorts\n  const getRandomResorts = function (resorts) {\n    let num = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n    const shuffled = [...resorts].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, num);\n  };\n  useEffect(() => {\n    // Initially set to 5 random resorts\n    setDisplayedResorts(getRandomResorts(resortList));\n  }, []); // Empty dependency array ensures this runs once on mount\n\n  const handleSearch = event => {\n    const term = event.target.value;\n    setSearchTerm(term);\n    if (term) {\n      const filteredResorts = resortList.filter(resort => resort.Resort.toLowerCase().includes(term.toLowerCase()));\n      setDisplayedResorts(filteredResorts);\n    } else {\n      setDisplayedResorts(getRandomResorts(resortList)); // Reset to 5 random resorts when search term is cleared\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a resort...\",\n        onChange: event => {\n          const filteredResorts = resortList.filter(resort => resort.Resort.toLowerCase().includes(event.target.value.toLowerCase()));\n          setSearchResort(filteredResorts);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resort-list\",\n      children: searchResort.map((resort, index) => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/resort-details/\".concat(resort.slug),\n              children: resort.Resort\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Ski Pass: \", resort[\"Ski Pass\"]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", resort[\"Location (State)\"]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(mainPage, \"xO9L9JQMN3lxJMBr0WO6eLqLqSY=\", false, function () {\n  return [useLoaderData];\n});","map":{"version":3,"names":["React","useState","useLoaderData","Link","jsxDEV","_jsxDEV","mainPage","_s","resortList","searchResort","setSearchResort","displayedResorts","setDisplayedResorts","getRandomResorts","resorts","num","arguments","length","undefined","shuffled","sort","Math","random","slice","useEffect","handleSearch","event","term","target","value","setSearchTerm","filteredResorts","filter","resort","Resort","toLowerCase","includes","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","index","to","concat","slug"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/index.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useLoaderData, Link } from 'react-router-dom';\n\n/*\nITP 404, Final Project\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nThis file is for the home page which shows user list of meals, and allow user to conduct search function.\n*/\n\nexport default function mainPage() {\n  const resortList = useLoaderData();\n  const [searchResort, setSearchResort] = useState(resortList);\n  const [displayedResorts, setDisplayedResorts] = useState([]);\n\n  // Function to get 5 random resorts\n  const getRandomResorts = (resorts, num = 5) => {\n    const shuffled = [...resorts].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, num);\n  };\n\n  useEffect(() => {\n    // Initially set to 5 random resorts\n    setDisplayedResorts(getRandomResorts(resortList));\n  }, []); // Empty dependency array ensures this runs once on mount\n\n  const handleSearch = (event) => {\n    const term = event.target.value;\n    setSearchTerm(term);\n\n    if (term) {\n      const filteredResorts = resortList.filter((resort) =>\n        resort.Resort.toLowerCase().includes(term.toLowerCase())\n      );\n      setDisplayedResorts(filteredResorts);\n    } else {\n      setDisplayedResorts(getRandomResorts(resortList)); // Reset to 5 random resorts when search term is cleared\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for a resort...\"\n          onChange={(event) => {\n            const filteredResorts = resortList.filter((resort) =>\n              resort.Resort.toLowerCase().includes(event.target.value.toLowerCase())\n            );\n            setSearchResort(filteredResorts);\n          }}\n        />\n      </div>\n\n      <div className=\"resort-list\">\n        {/* Mapping through the data to display the name of each resort. */}\n        {searchResort.map((resort, index) => {\n          return (\n            <ul key={index}>\n              <li>\n                <Link to={`/resort-details/${resort.slug}`}>{resort.Resort}</Link>\n                <p>Ski Pass: {resort[\"Ski Pass\"]}</p>\n                <p>Location: {resort[\"Location (State)\"]}</p>\n              </li>\n            </ul>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}