{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const selectAllRef = useRef(null);\n  useEffect(() => {\n    // Fetch items from your API\n    fetch('http://localhost:3000/').then(response => response.json()).then(data => setItems(data)).catch(error => console.error('Error:', error));\n  }, []);\n  const handleSelectAll = e => {\n    if (e.target.checked) {\n      const newSelectedItems = new Set(items.map(item => item.id));\n      setSelectedItems(newSelectedItems);\n    } else {\n      setSelectedItems(new Set());\n    }\n  };\n  useEffect(() => {\n    if (selectAllRef.current) {\n      selectAllRef.current.indeterminate = selectedItems.size > 0 && selectedItems.size < items.length;\n    }\n  }, [selectedItems, items]);\n  const handleSelectItem = id => {\n    const newSelectedItems = new Set(selectedItems);\n    if (newSelectedItems.has(id)) {\n      newSelectedItems.delete(id);\n    } else {\n      newSelectedItems.add(id);\n    }\n    setSelectedItems(newSelectedItems);\n  };\n  const handleBulkDelete = () => {\n    Promise.all(Array.from(selectedItems).map(id => fetch(\"/api/your-resource/\".concat(id), {\n      method: 'DELETE'\n    }))).then(() => {\n      // Show notification\n      console.log('Deleted successfully');\n      // Update the list by filtering out the deleted items\n      setItems(items.filter(item => !selectedItems.has(item.id)));\n      setSelectedItems(new Set());\n    }).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      ref: selectAllRef,\n      onChange: handleSelectAll,\n      checked: selectedItems.size === items.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedItems.has(item.id),\n        onChange: () => handleSelectItem(item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), item.name, \" \"]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)), selectedItems.size > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBulkDelete,\n      children: \"Delete Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"bi/UlnORJF99d+eYji55Oj2RZ4M=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AdminPage","_s","items","setItems","selectedItems","setSelectedItems","Set","selectAllRef","fetch","then","response","json","data","catch","error","console","handleSelectAll","e","target","checked","newSelectedItems","map","item","id","current","indeterminate","size","length","handleSelectItem","has","delete","add","handleBulkDelete","Promise","all","Array","from","concat","method","log","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","name","onClick","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/admin.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst AdminPage = () => {\n    const [items, setItems] = useState([]);\n    const [selectedItems, setSelectedItems] = useState(new Set());\n    const selectAllRef = useRef(null);\n\n    useEffect(() => {\n        // Fetch items from your API\n        fetch('http://localhost:3000/')\n            .then(response => response.json())\n            .then(data => setItems(data))\n            .catch(error => console.error('Error:', error));\n    }, []);\n\n    const handleSelectAll = (e) => {\n        if (e.target.checked) {\n            const newSelectedItems = new Set(items.map(item => item.id));\n            setSelectedItems(newSelectedItems);\n        } else {\n            setSelectedItems(new Set());\n        }\n    };\n\n    useEffect(() => {\n        if (selectAllRef.current) {\n            selectAllRef.current.indeterminate = selectedItems.size > 0 && selectedItems.size < items.length;\n        }\n    }, [selectedItems, items]);\n\n    const handleSelectItem = (id) => {\n        const newSelectedItems = new Set(selectedItems);\n        if (newSelectedItems.has(id)) {\n            newSelectedItems.delete(id);\n        } else {\n            newSelectedItems.add(id);\n        }\n        setSelectedItems(newSelectedItems);\n    };\n\n    const handleBulkDelete = () => {\n        Promise.all(Array.from(selectedItems).map(id =>\n            fetch(`/api/your-resource/${id}`, { method: 'DELETE' })\n        ))\n            .then(() => {\n                // Show notification\n                console.log('Deleted successfully');\n                // Update the list by filtering out the deleted items\n                setItems(items.filter(item => !selectedItems.has(item.id)));\n                setSelectedItems(new Set());\n            })\n            .catch(error => console.error('Error:', error));\n    };\n\n    return (\n        <div>\n            <h1>Admin Page</h1>\n            <input\n                type=\"checkbox\"\n                ref={selectAllRef}\n                onChange={handleSelectAll}\n                checked={selectedItems.size === items.length}\n            />\n            <label>Select All</label>\n            {items.map(item => (\n                <div key={item.id}>\n                    <input\n                        type=\"checkbox\"\n                        checked={selectedItems.has(item.id)}\n                        onChange={() => handleSelectItem(item.id)}\n                    />\n                    {item.name} {/* Replace with actual item property */}\n                </div>\n            ))}\n            {selectedItems.size > 0 && (\n                <button onClick={handleBulkDelete}>Delete Selected</button>\n            )}\n        </div>\n    );\n};\n\nexport default AdminPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}