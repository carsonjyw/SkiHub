{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/planning.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TripForm() {\n  _s();\n  const [year, setYear] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [resortName, setResortName] = useState('');\n  const [pass, setPass] = useState('');\n  const [note, setNote] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(\"http://localhost:3000/trips?id_year=\".concat(year));\n      const data = await response.json();\n      const tripDetail = {\n        \"date-start\": startDate,\n        \"date-end\": endDate,\n        resortName,\n        pass,\n        note\n      };\n      if (data.length > 0) {\n        // Year exists, update the details array\n        const updatedTrips = {\n          ...data[0],\n          details: [...data[0].details, tripDetail]\n        };\n        await fetch(\"http://localhost:3000/trips/\".concat(data[0].id), {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedTrips)\n        });\n      } else {\n        // Year does not exist, create new entry\n        const newTrip = {\n          id_year: year,\n          details: [tripDetail]\n        };\n        await fetch('http://localhost:3000/trips', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newTrip)\n        });\n      }\n\n      // Reset form and states\n      setYear('');\n      setStartDate('');\n      setEndDate('');\n      setResortName('');\n      setPass('');\n      setNote('');\n    } catch (err) {\n      console.error('Error:', err);\n      setError('An error occurred while saving the trip.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(TripForm, \"Qlp9DRJ43SvnG7y0BmAN5uIZ52M=\");\n_c = TripForm;\nexport default TripForm;\nvar _c;\n$RefreshReg$(_c, \"TripForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TripForm","_s","year","setYear","startDate","setStartDate","endDate","setEndDate","resortName","setResortName","pass","setPass","note","setNote","loading","setLoading","error","setError","handleSubmit","e","preventDefault","response","fetch","concat","data","json","tripDetail","length","updatedTrips","details","id","method","headers","body","JSON","stringify","newTrip","id_year","err","console","onSubmit","children","type","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/planning.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TripForm() {\n    const [year, setYear] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [resortName, setResortName] = useState('');\n    const [pass, setPass] = useState('');\n    const [note, setNote] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setError('');\n\n        try {\n            const response = await fetch(`http://localhost:3000/trips?id_year=${year}`);\n            const data = await response.json();\n\n            const tripDetail = {\n                \"date-start\": startDate,\n                \"date-end\": endDate,\n                resortName,\n                pass,\n                note\n            };\n\n            if (data.length > 0) {\n                // Year exists, update the details array\n                const updatedTrips = { ...data[0], details: [...data[0].details, tripDetail] };\n                await fetch(`http://localhost:3000/trips/${data[0].id}`, {\n                    method: 'PUT',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(updatedTrips)\n                });\n            } else {\n                // Year does not exist, create new entry\n                const newTrip = {\n                    id_year: year,\n                    details: [tripDetail]\n                };\n                await fetch('http://localhost:3000/trips', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(newTrip)\n                });\n            }\n\n            // Reset form and states\n            setYear('');\n            setStartDate('');\n            setEndDate('');\n            setResortName('');\n            setPass('');\n            setNote('');\n        } catch (err) {\n            console.error('Error:', err);\n            setError('An error occurred while saving the trip.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {/* Form fields here */}\n            {/* ... */}\n            <button type=\"submit\" disabled={loading}>Submit</button>\n            {error && <p>{error}</p>}\n        </form>\n    );\n}\n\nexport default TripForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}