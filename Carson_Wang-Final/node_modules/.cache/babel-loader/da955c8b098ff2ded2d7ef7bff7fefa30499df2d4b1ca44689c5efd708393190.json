{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/index.js\";\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// Importing route components\nimport Root from './routes/root';\nimport Index from './routes/index';\nimport DetailPage from './routes/details';\nimport UserTrips from './routes/trips';\nimport SavedResorts from './routes/saveResorts';\nimport Admin from './routes/admin';\nimport './css/index.css';\n\n/*\nITP 404, Midterm\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nCreate router, loader for react-router-dom\n*/\n\n// Create the router with route configurations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(Index, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this),\n    loader() {\n      return fetch(\"http://localhost:3000/resorts\").then(response => {\n        // Check if the response is successful\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(json => {\n        // Assuming the data is directly in the JSON and not in a `data` property\n        return json;\n      }).catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n        // Return null or an appropriate fallback value if there's an error\n        return null;\n      });\n    }\n  }, {\n    path: '/resort-details/:resortName',\n    element: /*#__PURE__*/_jsxDEV(DetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this),\n    loader: async _ref => {\n      let {\n        params\n      } = _ref;\n      try {\n        const response = await fetch('http://localhost:3000/resorts');\n        if (!response.ok) {\n          throw new Error(\"Network error: \".concat(response.statusText));\n        }\n        const resorts = await response.json();\n\n        // Find the resort that matches the URL parameter\n        const matchedResort = resorts.find(resort => resort.Resort === params.resortName);\n        if (!matchedResort) {\n          throw new Error(\"No resort found with name: \".concat(params.resortName));\n        }\n        return matchedResort;\n      } catch (error) {\n        // Handle any errors that occurred during fetch\n        throw new Error('Error fetching resort details: ' + error.message);\n      }\n    }\n  }, {\n    path: '/my-trips',\n    element: /*#__PURE__*/_jsxDEV(UserTrips, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 18\n    }, this),\n    loader() {\n      return fetch(\"http://localhost:3000/trips\").then(response => {\n        // Check if the response is successful\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(json => {\n        // Assuming the data is directly in the JSON and not in a `data` property\n        return json;\n      }).catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n        // Return null or an appropriate fallback value if there's an error\n        return null;\n      });\n    }\n  }, {\n    path: '/savedResorts',\n    element: /*#__PURE__*/_jsxDEV(SavedResorts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }, this),\n    loader() {\n      return fetch(\"http://localhost:3000/saved\").then(response => {\n        // Check if the response is successful\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(json => {\n        // Assuming the data is directly in the JSON and not in a `data` property\n        return json;\n      }).catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n        // Return null or an appropriate fallback value if there's an error\n        return null;\n      });\n    }\n  }, {\n    path: '/admin',\n    element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 18\n    }, this),\n    loader() {\n      return fetch(\"http://localhost:3000/saved\").then(response => {\n        // Check if the response is successful\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(json => {\n        // Assuming the data is directly in the JSON and not in a `data` property\n        return json;\n      }).catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n        // Return null or an appropriate fallback value if there's an error\n        return null;\n      });\n    }\n  }]\n}]);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 154,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["createBrowserRouter","RouterProvider","React","ReactDOM","Root","Index","DetailPage","UserTrips","SavedResorts","Admin","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","loader","fetch","then","response","ok","Error","json","catch","error","console","_ref","params","concat","statusText","resorts","matchedResort","find","resort","Resort","resortName","message","root","createRoot","document","getElementById","render","StrictMode"],"sources":["/Users/carson/Downloads/react-lxufmk/src/index.js"],"sourcesContent":["import { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// Importing route components\nimport Root from './routes/root';\nimport Index from './routes/index';\nimport DetailPage from './routes/details';\nimport UserTrips from './routes/trips';\nimport SavedResorts from './routes/saveResorts';\nimport Admin from './routes/admin';\n\nimport './css/index.css';\n\n/*\nITP 404, Midterm\nAuthor: Carson Wang\nEmail: carsonw@usc.edu\nCreate router, loader for react-router-dom\n*/\n\n// Create the router with route configurations\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <Root />,\n    children: [\n      {\n        path: '/',\n        element: <Index />,\n        loader() {\n          return fetch(\"http://localhost:3000/resorts\")\n            .then((response) => {\n              // Check if the response is successful\n              if (!response.ok) {\n                throw new Error('Network response was not ok');\n              }\n              return response.json();\n            })\n            .then((json) => {\n              // Assuming the data is directly in the JSON and not in a `data` property\n              return json;\n            })\n            .catch((error) => {\n              console.error('There has been a problem with your fetch operation:', error);\n              // Return null or an appropriate fallback value if there's an error\n              return null;\n            });\n        }\n      },\n      {\n        path: '/resort-details/:resortName',\n        element: <DetailPage />,\n        loader: async ({ params }) => {\n          try {\n            const response = await fetch('http://localhost:3000/resorts');\n            if (!response.ok) {\n              throw new Error(`Network error: ${response.statusText}`);\n            }\n            const resorts = await response.json();\n\n            // Find the resort that matches the URL parameter\n            const matchedResort = resorts.find(\n              (resort) => resort.Resort === params.resortName\n            );\n\n            if (!matchedResort) {\n              throw new Error(`No resort found with name: ${params.resortName}`);\n            }\n\n            return matchedResort;\n          } catch (error) {\n            // Handle any errors that occurred during fetch\n            throw new Error('Error fetching resort details: ' + error.message);\n          }\n        }\n      },\n      {\n        path: '/my-trips',\n        element: <UserTrips />,\n        loader() {\n          return fetch(\"http://localhost:3000/trips\")\n            .then((response) => {\n              // Check if the response is successful\n              if (!response.ok) {\n                throw new Error('Network response was not ok');\n              }\n              return response.json();\n            })\n            .then((json) => {\n              // Assuming the data is directly in the JSON and not in a `data` property\n              return json;\n            })\n            .catch((error) => {\n              console.error('There has been a problem with your fetch operation:', error);\n              // Return null or an appropriate fallback value if there's an error\n              return null;\n            });\n        }\n      },\n      {\n        path: '/savedResorts',\n        element: <SavedResorts />,\n        loader() {\n          return fetch(\"http://localhost:3000/saved\")\n            .then((response) => {\n              // Check if the response is successful\n              if (!response.ok) {\n                throw new Error('Network response was not ok');\n              }\n              return response.json();\n            })\n            .then((json) => {\n              // Assuming the data is directly in the JSON and not in a `data` property\n              return json;\n            })\n            .catch((error) => {\n              console.error('There has been a problem with your fetch operation:', error);\n              // Return null or an appropriate fallback value if there's an error\n              return null;\n            });\n        }\n      },\n      {\n        path: '/admin',\n        element: <Admin />,\n        loader() {\n          return fetch(\"http://localhost:3000/saved\")\n            .then((response) => {\n              // Check if the response is successful\n              if (!response.ok) {\n                throw new Error('Network response was not ok');\n              }\n              return response.json();\n            })\n            .then((json) => {\n              // Assuming the data is directly in the JSON and not in a `data` property\n              return json;\n            })\n            .catch((error) => {\n              console.error('There has been a problem with your fetch operation:', error);\n              // Return null or an appropriate fallback value if there's an error\n              return null;\n            });\n        },\n      }\n    ]\n  }\n]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}