{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/react-lxufmk/src/routes/admin.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminPage() {\n  _s();\n  const [resorts, setResorts] = useState([]);\n  const [selectedResorts, setSelectedResorts] = useState(new Set());\n  const selectAllRef = useRef(null);\n  useEffect(() => {\n    fetch('http://localhost:3000/saved').then(response => response.json()).then(data => setResorts(data)).catch(error => console.error('Error:', error));\n  }, []);\n  useEffect(() => {\n    if (selectAllRef.current) {\n      selectAllRef.current.indeterminate = selectedResorts.size > 0 && selectedResorts.size < resorts.length;\n    }\n  }, [selectedResorts, resorts]);\n  const handleSelectAll = isChecked => {\n    setSelectedResorts(new Set(isChecked ? resorts.map(r => r.id) : []));\n  };\n  const handleSelectResort = (id, isChecked) => {\n    const newSelected = new Set(selectedResorts);\n    if (isChecked) {\n      newSelected.add(id);\n    } else {\n      newSelected.delete(id);\n    }\n    setSelectedResorts(newSelected);\n  };\n  const handleDeleteSelected = () => {\n    Promise.all(Array.from(selectedResorts).map(id => fetch(\"http://localhost:3000/saved/\".concat(id), {\n      method: 'DELETE'\n    }))).then(() => {\n      setResorts(resorts.filter(r => !selectedResorts.has(r.id)));\n      setSelectedResorts(new Set());\n      alert('Selected resorts have been deleted'); // Or use a more sophisticated notification\n    }).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin - Saved Resorts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: \"Select All\",\n      checked: selectedResorts.size === resorts.length,\n      isIndeterminate: selectedResorts.size > 0 && selectedResorts.size < resorts.length,\n      onChange: isChecked => handleSelectAll(isChecked),\n      ref: selectAllRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), resorts.map(resort => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedResorts.has(resort.id),\n        onChange: e => handleSelectResort(resort.id, e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), resort.Resort, \" - \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/resort-details/\".concat(resort.Resort),\n        children: \"Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 39\n      }, this)]\n    }, resort.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)), selectedResorts.size > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteSelected,\n      children: \"Delete Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminPage, \"yo+p9+/VWdlYEMi1fuAQtMYbeUQ=\");\n_c = AdminPage;\nfunction Checkbox(_ref) {\n  _s2();\n  let {\n    label,\n    checked,\n    isIndeterminate,\n    onChange\n  } = _ref;\n  const checkboxRef = useRef();\n  useEffect(() => {\n    checkboxRef.current.indeterminate = isIndeterminate;\n  }, [isIndeterminate]);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      ref: checkboxRef,\n      checked: checked,\n      onChange: event => onChange(event.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s2(Checkbox, \"s2fw4JFsYZ/+C1WMGT54pjQwCLM=\");\n_c2 = Checkbox;\nvar _c, _c2;\n$RefreshReg$(_c, \"AdminPage\");\n$RefreshReg$(_c2, \"Checkbox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AdminPage","_s","resorts","setResorts","selectedResorts","setSelectedResorts","Set","selectAllRef","fetch","then","response","json","data","catch","error","console","current","indeterminate","size","length","handleSelectAll","isChecked","map","r","id","handleSelectResort","newSelected","add","delete","handleDeleteSelected","Promise","all","Array","from","concat","method","filter","has","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","Checkbox","label","checked","isIndeterminate","onChange","ref","resort","type","e","target","Resort","Link","to","onClick","_c","_ref","_s2","checkboxRef","event","_c2","$RefreshReg$"],"sources":["/Users/carson/Downloads/react-lxufmk/src/routes/admin.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nexport default function AdminPage() {\n    const [resorts, setResorts] = useState([]);\n    const [selectedResorts, setSelectedResorts] = useState(new Set());\n    const selectAllRef = useRef(null);\n\n    useEffect(() => {\n        fetch('http://localhost:3000/saved')\n            .then(response => response.json())\n            .then(data => setResorts(data))\n            .catch(error => console.error('Error:', error));\n    }, []);\n\n    useEffect(() => {\n        if (selectAllRef.current) {\n            selectAllRef.current.indeterminate =\n                selectedResorts.size > 0 && selectedResorts.size < resorts.length;\n        }\n    }, [selectedResorts, resorts]);\n\n    const handleSelectAll = (isChecked) => {\n        setSelectedResorts(new Set(isChecked ? resorts.map(r => r.id) : []));\n    };\n\n    const handleSelectResort = (id, isChecked) => {\n        const newSelected = new Set(selectedResorts);\n        if (isChecked) {\n            newSelected.add(id);\n        } else {\n            newSelected.delete(id);\n        }\n        setSelectedResorts(newSelected);\n    };\n\n    const handleDeleteSelected = () => {\n        Promise.all(Array.from(selectedResorts).map(id =>\n            fetch(`http://localhost:3000/saved/${id}`, { method: 'DELETE' })\n        ))\n            .then(() => {\n                setResorts(resorts.filter(r => !selectedResorts.has(r.id)));\n                setSelectedResorts(new Set());\n                alert('Selected resorts have been deleted'); // Or use a more sophisticated notification\n            })\n            .catch(error => console.error('Error:', error));\n    };\n\n    return (\n        <div>\n            <h1>Admin - Saved Resorts</h1>\n            <Checkbox\n                label=\"Select All\"\n                checked={selectedResorts.size === resorts.length}\n                isIndeterminate={selectedResorts.size > 0 && selectedResorts.size < resorts.length}\n                onChange={(isChecked) => handleSelectAll(isChecked)}\n                ref={selectAllRef}\n            />\n            {resorts.map(resort => (\n                <div key={resort.id}>\n                    <input\n                        type=\"checkbox\"\n                        checked={selectedResorts.has(resort.id)}\n                        onChange={(e) => handleSelectResort(resort.id, e.target.checked)}\n                    />\n                    {resort.Resort} - <Link to={`/resort-details/${resort.Resort}`}>Detail</Link>\n                </div>\n            ))}\n            {selectedResorts.size > 0 && (\n                <button onClick={handleDeleteSelected}>Delete Selected</button>\n            )}\n        </div>\n    );\n}\n\nfunction Checkbox({ label, checked, isIndeterminate, onChange }) {\n    const checkboxRef = useRef();\n\n    useEffect(() => {\n        checkboxRef.current.indeterminate = isIndeterminate;\n    }, [isIndeterminate]);\n\n    return (\n        <label>\n            <input\n                type=\"checkbox\"\n                ref={checkboxRef}\n                checked={checked}\n                onChange={(event) => onChange(event.target.checked)}\n            />\n            {label}\n        </label>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}