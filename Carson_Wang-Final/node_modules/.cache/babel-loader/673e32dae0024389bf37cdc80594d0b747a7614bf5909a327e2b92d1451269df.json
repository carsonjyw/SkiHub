{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Downloads/Carson_Wang-Final/src/routes/reuseable.js\";\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalDialog(props) {\n  if (!props.isOpen) return null;\n  const handleAction = async () => {\n    try {\n      await props.onAction();\n      toast.success(\"You can provide any string\", {\n        icon: \"ðŸš€\"\n      });\n      props.onClose();\n    } catch (error) {\n      toast.error('An error occurred.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-backdrop\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          onClick: props.onClose,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [props.children, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAction,\n            className: \"btn btn-primary\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = ModalDialog;\n;\nvar _c;\n$RefreshReg$(_c, \"ModalDialog\");","map":{"version":3,"names":["React","toast","jsxDEV","_jsxDEV","ModalDialog","props","isOpen","handleAction","onAction","success","icon","onClose","error","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/carson/Downloads/Carson_Wang-Final/src/routes/reuseable.js"],"sourcesContent":["import React from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function ModalDialog(props) {\n    if (!props.isOpen) return null;\n\n    const handleAction = async () => {\n        try {\n            await props.onAction();\n            toast.success(\"You can provide any string\", {\n                icon: \"ðŸš€\"\n            });\n            props.onClose();\n        } catch (error) {\n            toast.error('An error occurred.');\n        }\n    };\n\n    return (\n        <div className=\"modal-backdrop\">\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">{props.title}</h5>\n                    <button type=\"button\" className=\"close\" onClick={props.onClose}>\n                        <span>&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {props.children}\n                    <div className=\"modal-footer\">\n                        <button onClick={handleAction} className=\"btn btn-primary\">Confirm</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EACvC,IAAI,CAACA,KAAK,CAACC,MAAM,EAAE,OAAO,IAAI;EAE9B,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMF,KAAK,CAACG,QAAQ,CAAC,CAAC;MACtBP,KAAK,CAACQ,OAAO,CAAC,4BAA4B,EAAE;QACxCC,IAAI,EAAE;MACV,CAAC,CAAC;MACFL,KAAK,CAACM,OAAO,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZX,KAAK,CAACW,KAAK,CAAC,oBAAoB,CAAC;IACrC;EACJ,CAAC;EAED,oBACIT,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3BX,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BX,OAAA;QAAKU,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBX,OAAA;UAAIU,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAET,KAAK,CAACU;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9ChB,OAAA;UAAQiB,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,OAAO;UAACQ,OAAO,EAAEhB,KAAK,CAACM,OAAQ;UAAAG,QAAA,eAC3DX,OAAA;YAAAW,QAAA,EAAM;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNhB,OAAA;QAAKU,SAAS,EAAC,YAAY;QAAAC,QAAA,GACtBT,KAAK,CAACS,QAAQ,eACfX,OAAA;UAAKU,SAAS,EAAC,cAAc;UAAAC,QAAA,eACzBX,OAAA;YAAQkB,OAAO,EAAEd,YAAa;YAACM,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACG,EAAA,GAjCuBlB,WAAW;AAiClC;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}